//
//  MyOrderViewController.m
//  FamilysHelper
//
//  Created by zhouwengang on 15/6/6.
//  Copyright (c) 2015年 FamilyTree. All rights reserved.
//

#import "MyOrderViewController.h"
#import "EGOTableView.h"
#import "UserService.h"
#import "OrderCell.h"
#import "SegmentBarView.h"
#import "TribeModel.h"
#import "GoodsModel.h"
@interface MyOrderViewController () <EGOTableViewDelegate, UITableViewDataSource, UITableViewDelegate,SegmentBarViewDelegate> {
    BOOL _iRefresh;
    NSString* _cacheKey;
    ASIHTTPRequest* _request;
    NSString *payStatus;
}

@end

@implementation MyOrderViewController{

SegmentBarView* _barView;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    _iRefresh = NO;
    _cacheKey = [NSString stringWithFormat:@"%@_%ld", CACHE_PERSON_MYORDER, (long)[CurrentAccount currentAccount].uid];
    [self setWhiteNavBg];
    [self initView];
    [self initializeWhiteBackgroudView:@"我的购"];
    _dataModel = [AppCache loadCache:_cacheKey];
    if (!_dataModel) {
        [_tableView launchRefreshing];
    }
}

- (void)initView
{
    
    _barView = [[SegmentBarView alloc]
                initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 40)
                andItems:@[ @"待付款", @"待消费", @"已消费" ,@"已取消",@"已退款"]];
    _barView.clickDelegate = self;
    [_barView setBackgroundColor:[UIColor whiteColor]];
    _tableView = [[EGOTableView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT - TopBarHeight)];
    _tableView.backgroundColor = [UIColor clearColor];
    _tableView.backgroundView = nil;
    _tableView.dataSource = self;
    _tableView.delegate = self;
    _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    _tableView.pullingDelegate = self;
    _tableView.autoScrollToNextPage = NO;
    _tableView.tableHeaderView = _barView;
    [self.view addSubview:_tableView];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
}

- (void)pullingTableViewDidStartRefreshing:(EGOTableHeaderView*)tableView
{

    if (_dataModel) {
        _dataModel.nextCursor = 0;
        _dataModel.previousCursor = 0;
    }
    _iRefresh = YES;
    [self performSelector:@selector(loadData) withObject:nil afterDelay:0.1f];
}

- (void)pullingTableViewDidStartLoading:(EGOTableView*)tableView
{
    _iRefresh = NO;
    [self performSelector:@selector(loadData) withObject:nil afterDelay:0.1f];
}

- (NSDate*)pullingTableViewRefreshingFinishedDate
{
    return [NSDate date];
}
- (NSDate*)pullingTableViewLoadingFinishedDate
{
    return [NSDate date];
}


- (CGFloat)tableView:(UITableView*)tableView heightForRowAtIndexPath:(NSIndexPath*)indexPath
{
    return 170;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView*)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView*)tableView numberOfRowsInSection:(NSInteger)section
{
    return ((NSArray*)_dataModel.data).count;
}
- (void)tableView:(UITableView*)tableView didSelectRowAtIndexPath:(NSIndexPath*)indexPath
{
    OrderModel * ordermodel;
  
    ordermodel = _dataModel.data[indexPath.section];
    
    
    GoodsModel* goods = [[GoodsModel alloc]init ];
    goods.shopName = ordermodel.shopname;
    goods.shopId = ordermodel.shopId;
    goods.goodsId=ordermodel.goodsId;
    goods.goodsName=ordermodel.goodsname;
    NSDictionary* dic = @{ ACTION_Controller_Name : self, ACTION_Controller_Data : goods };
    
    [self RouteMessage:ACTION_SHOW_BANGBANG_GOODSDETAIL
           withContext:dic];
}


- (UITableViewCell*)tableView:(UITableView*)tableView cellForRowAtIndexPath:(NSIndexPath*)indexPath
{
    static NSString* identifier = @"myorderCellIdentifier";
    OrderCell* cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    if (cell == nil) {
        cell = [[[NSBundle mainBundle] loadNibNamed:@"OrderCell" owner:self options:nil] lastObject];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        [cell initView];
    }

    NSArray* list = _dataModel.data;

    [cell bindMsgModel:list[indexPath.row]];
     cell.bockcancel = ^(void) {
        [_tableView launchRefreshing];
     };
    return cell;
}

#pragma mark -
#pragma mark UIScrollViewDelegate
- (void)scrollViewDidScroll:(UIScrollView*)scrollView
{
    [_tableView tableViewDidScroll:scrollView];
}
- (void)scrollViewDidEndDragging:(UIScrollView*)scrollView willDecelerate:(BOOL)decelerate
{
    [_tableView tableViewDidEndDragging:scrollView];
}
- (void)loadData
{
    if (_request) {
        [_request cancel];
    }
    switch (_barView.selectedIndex) {
        case 0: {
            payStatus =@"1" ;
            break;
        }
        case 1: {
            payStatus =@"2" ;
            break;
        }
        case 2: {
            payStatus =@"3" ;
            break;
        case 3: {
            payStatus =@"4" ;
            break;
        }
        case 4: {
            payStatus =@"5" ;
            break;
        }
        default:
            break;

        }
        
    }
            
    _request = [[UserService shareInstance] getMyOrderList:[CurrentAccount currentAccount].uid
                                      payStatus:payStatus
                                     nextCursor:_dataModel.nextCursor
                                      OnSuccess:^(DataModel* dataModel) {
                                          if (dataModel.code == 200) {

                                              if (_dataModel && !_iRefresh) {
                                                  NSMutableArray* list = _dataModel.data;
                                                  [list addObjectsFromArray:dataModel.data];
                                                  _dataModel.data = list;
                                                  _dataModel.previousCursor = dataModel.previousCursor;
                                                  _dataModel.nextCursor = dataModel.nextCursor;
                                              }
                                              else
                                                  _dataModel = dataModel;

                                              [AppCache saveCache:_cacheKey Data:_dataModel];

                                              if (_dataModel.previousCursor == _dataModel.nextCursor) {
                                                  _tableView.reachedTheEnd = YES;
                                              }
                                              else {
                                                  _tableView.reachedTheEnd = NO;
                                              }
                                              [_tableView reloadData];
                                          }
                                          else {
                                              [ToastManager showToast:dataModel.error withTime:Toast_Hide_TIME];
                                              _tableView.reachedTheEnd = NO;
                                          }
                                          [_tableView tableViewDidFinishedLoading];
                                      }];
       
    
}
#pragma mark -
#pragma mark SegmentBarViewDelegate

- (void)barSelectedIndexChanged:(int)newIndex
{
    
    if (_dataModel) {
        _dataModel.nextCursor = 0;
        _dataModel.previousCursor = 0;
        [((NSMutableArray*)_dataModel.data)removeAllObjects];
    }
    [_tableView launchRefreshing];
}
@end

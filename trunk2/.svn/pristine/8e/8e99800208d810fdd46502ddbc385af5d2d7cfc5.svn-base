//
//  GroupInfoController.m
//  FamilysHelper
//
//  Created by 曹亮 on 15/4/10.
//  Copyright (c) 2015年 FamilyTree. All rights reserved.
//

#import "GroupInfoController.h"

#import "JMStaticContentTableViewSection.h"
#import "JMStaticContentTableViewCell.h"
#import "JMStaticContentTableViewBlocks.h"

#import "SearchPersonController.h"

#import "SettingViewController.h"

@interface GroupInfoController()<UITextFieldDelegate,UITableViewDataSource,UITableViewDelegate>{
    GroupModel * _currentGroupModel;
}



@end

@implementation GroupInfoController


- (id)init
{
    self = [super init];
    if (self) {
    }
    return self;
}
- (void)viewDidLoad{
    [super viewDidLoad];
    
    [self initializeNavTitleView:@"群资料"];
    [self initializeNavBackView];
    
    tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT - TopBarHeight - 20)];
    tableView.dataSource = self;
    tableView.delegate = self;
    tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    tableView.backgroundColor = [UIColor clearColor];
    tableView.backgroundView = nil;
    [self.view addSubview:tableView];
    
    [self initializeTableView];
    [tableView reloadData];
    
    [self requestInfoMethod];
    
}
- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
}
- (void)viewDidAppear:(BOOL)animated{
    [super viewDidAppear:animated];
}
- (void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    
    [request clearDelegatesAndCancel];
    request = nil;
}

- (void)didReceiveMemoryWarning{
    [super didReceiveMemoryWarning];
}

- (void)requestInfoMethod{
    if ([NetManage isNetworkReachable]) {
        NSMutableString * str = [[NSMutableString alloc] initWithString:GetRoomInfo(_currentUserMessageModel.name)];
        request = [ASIHTTPRequest requestWithURL:[NSURL URLWithString:str]];
        request.delegate = self;
        request.timeOutSeconds = HTTP_TIMEOUT;
        [request setDidFinishSelector:@selector(GetInfoResult:)];
        [request setDidFailSelector:@selector(GetInfoErr:)];
        [request startSynchronous];
    }else{
        [ToastManager showToast:Toast_NetWork_Bad withTime:Toast_Hide_TIME];
    }
}

#pragma mark -
#pragma mark ASIHTTPRequestDelegate
- (void)GetInfoResult:(ASIHTTPRequest *)lrequest{
    NSData *data =[lrequest responseData];
    NSError *error = nil;
    
    NSString * str = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];
    
    NSDictionary *totlaDic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableLeaves error:&error];
    
    NSDictionary * dataDic = [totlaDic objectForKey:@"o"];

    if (dataDic) {
         _currentGroupModel = [GroupModel  JsonInfoParse:dataDic];
        
        [tableView reloadData];
    }

}
- (void)GetInfoErr:(ASIHTTPRequest *)request{
    [ToastManager showToast:Toast_NetWork_Bad withTime:Toast_Hide_TIME];
}




#pragma mark
#pragma mark -- nav item action
- (void)rightItemAction:(id) sender
{
    SettingViewController * controller = [[SettingViewController alloc] init];
    [self.navigationController pushViewController:controller animated:YES];
}
#pragma mark -
#pragma mark Private Method

- (void)initializeTableView{
    [self removeAllSections];
    __unsafe_unretained GroupInfoController * BlockController = self;
    
    [self addSection:^(JMStaticContentTableViewSection *section, NSUInteger sectionIndex) {
        
        [section addCell:^(JMStaticContentTableViewCell *staticContentCell, UITableViewCell *cell, NSIndexPath *indexPath) {
            staticContentCell.reuseIdentifier = @"personManageCell1";
            staticContentCell.cellHeight = 65.0f;
            
            UILabel * lab = [[UILabel alloc] initWithFrame:CGRectMake(80, 10, 220, 40)];
            lab.text = @"个人用户";
            lab.textColor = [UIColor darkGrayColor];
            lab.highlightedTextColor = [UIColor darkGrayColor];
            lab.font = FONT_SIZE(15);
            lab.backgroundColor = [UIColor clearColor];
            [cell addSubview:lab];
            
            UIImageView * img = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"moreBtn1.png"]];
            img.frame = CGRectMake(10, 5, img.image.size.width, img.image.size.height);
            [cell addSubview:img];
            
            UIImageView * line = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"unityline.png"]];
            line.frame = CGRectMake(TableLeftSpaceWidth, TableChatHomeCellHeight-1, SCREEN_WIDTH, 1);
            [cell addSubview:line];
            
            cell.backgroundColor= [UIColor clearColor];
        }whenSelected:^(NSIndexPath * indexpath){
            
        }];
        
        
        [section addCell:^(JMStaticContentTableViewCell *staticContentCell, UITableViewCell *cell, NSIndexPath *indexPath) {
            staticContentCell.reuseIdentifier = @"personManageCell2";
            staticContentCell.cellHeight = TableChatHomeCellHeight;
            
            UILabel * lab = [[UILabel alloc] initWithFrame:CGRectMake(80, 10, 220, 40)];
            lab.text = @"群红包";
            lab.textColor = [UIColor darkGrayColor];
            lab.highlightedTextColor = [UIColor darkGrayColor];
            lab.font = FONT_SIZE(15);
            lab.backgroundColor = [UIColor clearColor];
            [cell addSubview:lab];
            
            UIImageView * img = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"moreBtn2.png"]];
            img.frame = CGRectMake(10, 5, img.image.size.width, img.image.size.height);
            [cell addSubview:img];
            
            UIImageView * line = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"unityline.png"]];
            line.frame = CGRectMake(TableLeftSpaceWidth, TableChatHomeCellHeight-1, SCREEN_WIDTH, 1);
            [cell addSubview:line];
            
            cell.backgroundColor= [UIColor clearColor];
        }whenSelected:^(NSIndexPath * indexpath){
            
        }];
        
        [section addCell:^(JMStaticContentTableViewCell *staticContentCell, UITableViewCell *cell, NSIndexPath *indexPath) {
            staticContentCell.reuseIdentifier = @"personManageCell3";
            staticContentCell.cellHeight = TableChatHomeCellHeight;
            
            UILabel * lab = [[UILabel alloc] initWithFrame:CGRectMake(80, 10, 220, 40)];
            lab.text = @"群主";
            lab.textColor = [UIColor darkGrayColor];
            lab.highlightedTextColor = [UIColor darkGrayColor];
            lab.font = FONT_SIZE(15);
            lab.backgroundColor = [UIColor clearColor];
            [cell addSubview:lab];
            
            UIImageView * img = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"moreBtn3.png"]];
            img.frame = CGRectMake(10, 5, img.image.size.width, img.image.size.height);
            [cell addSubview:img];
            
            UIImageView * line = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"unityline.png"]];
            line.frame = CGRectMake(TableLeftSpaceWidth, TableChatHomeCellHeight-1, SCREEN_WIDTH, 1);
            [cell addSubview:line];
            
            cell.backgroundColor= [UIColor clearColor];
        }whenSelected:^(NSIndexPath * indexpath){
            
        }];
        
        [section addCell:^(JMStaticContentTableViewCell *staticContentCell, UITableViewCell *cell, NSIndexPath *indexPath) {
            staticContentCell.reuseIdentifier = @"personManageCell4";
            staticContentCell.cellHeight = TableChatHomeCellHeight;
            
            UILabel * lab = [[UILabel alloc] initWithFrame:CGRectMake(80, 10, 220, 40)];
            lab.text = @"我的亲友";
            lab.textColor = [UIColor darkGrayColor];
            lab.highlightedTextColor = [UIColor darkGrayColor];
            lab.font = FONT_SIZE(15);
            lab.backgroundColor = [UIColor clearColor];
            [cell addSubview:lab];
            
            UIImageView * img = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"moreBtn3.png"]];
            img.frame = CGRectMake(10, 5, img.image.size.width, img.image.size.height);
            [cell addSubview:img];
            
            UIImageView * line = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"unityline.png"]];
            line.frame = CGRectMake(TableLeftSpaceWidth, TableChatHomeCellHeight-1, SCREEN_WIDTH, 1);
            [cell addSubview:line];
            
            cell.backgroundColor= [UIColor clearColor];
        }whenSelected:^(NSIndexPath * indexpath){
            SearchPersonController * controlelr = [[SearchPersonController alloc] initWithNibName:@"SearchPersonController" bundle:nil];
            [BlockController.navigationController pushViewController:controlelr animated:YES];
        }];
        
        
        
    }];
}

#pragma mark -
#pragma mark Static Content
- (void) removeAllSections {
    if(staticContentSections) {
        staticContentSections = nil;
        staticContentSections = [NSArray array];
    }
}
- (void) addSection:(JMStaticContentTableViewControllerAddSectionBlock)b {
    if(!staticContentSections) staticContentSections = [NSArray array];
    
    JMStaticContentTableViewSection *section = [[JMStaticContentTableViewSection alloc] init];
    section.tableView = tableView;
    
    b(section, [staticContentSections count] + 1);
    
    staticContentSections = [staticContentSections arrayByAddingObject:section];
}

#pragma mark -
#pragma mark UITableViewDataSource Method
- (NSInteger) numberOfSectionsInTableView:(UITableView *)tableView {
    return staticContentSections.count;
}
- (NSInteger) tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    JMStaticContentTableViewSection *sectionContent = [staticContentSections objectAtIndex:section];
    return sectionContent.staticContentCells.count;
}
- (CGFloat) tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    JMStaticContentTableViewSection *sectionContent = [staticContentSections objectAtIndex:indexPath.section];
    JMStaticContentTableViewCell *cellContent = [sectionContent.staticContentCells objectAtIndex:indexPath.row];
    
    return cellContent.cellHeight;
}
- (UITableViewCell *) tableView:(UITableView *)ltableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    JMStaticContentTableViewSection *sectionContent = [staticContentSections objectAtIndex:indexPath.section];
    JMStaticContentTableViewCell *cellContent = [sectionContent.staticContentCells objectAtIndex:indexPath.row];
    
    UITableViewCell *cell = [ltableView dequeueReusableCellWithIdentifier:cellContent.reuseIdentifier];
    if (cell == nil) {
        cell = [[[cellContent tableViewCellSubclass] alloc] initWithStyle:cellContent.cellStyle reuseIdentifier:cellContent.reuseIdentifier];
        
        cell.selectionStyle = UITableViewCellSelectionStyleGray;
    }
    cell.imageView.image = nil;
    cell.accessoryView = nil;
    cell.accessoryType = UITableViewCellAccessoryNone;
    
    cellContent.configureBlock(nil, cell, indexPath);
    return cell;
}
- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    UIView * lview = [[UIView alloc] init];
    //    lview.backgroundColor = TableViewColor;
    return lview;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 0.0f;
}

#pragma mark - Table view delegate
- (void) tableView:(UITableView *)ltableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    if(!ltableView.editing && !tableView.allowsMultipleSelection) [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if(ltableView.editing && !tableView.allowsMultipleSelectionDuringEditing) [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    JMStaticContentTableViewSection *sectionContent = [staticContentSections objectAtIndex:indexPath.section];
    JMStaticContentTableViewCell *cellContent = [sectionContent.staticContentCells objectAtIndex:indexPath.row];
    
    if(cellContent.whenSelectedBlock) {
        cellContent.whenSelectedBlock(indexPath);
    }
}
- (void) scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate {
    [self.view endEditing:YES];
}



@end

